{"version":3,"sources":["components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","reducers/todoReducer.js","TodoApp.js","index.js"],"names":["TodoListItem","todo","index","handleDelete","handleToggle","className","done","onClick","id","desc","TodoList","todos","map","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","type","placeholder","autoComplete","onChange","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93aaddf1.chunk.js","sourcesContent":["import React from 'react';\n\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\n    return (\n        <li className=\"list-group-item\" >\n            <p \n                className={`m-0 ${ todo.done && 'complete'} `}\n                onClick= { () => handleToggle(todo.id) }\n                > { index + 1 }. { todo.desc }\n            </p>\n\n            <button \n                className=\"btn btn-danger\"\n                onClick={ () => handleDelete(todo.id) }\n            > \n                Borrar\n            </button>\n        </li>\n    )\n}\n","import React from 'react';\nimport { TodoListItem } from './TodoListItem';\n\nexport const TodoList = ({ todos, handleDelete, handleToggle}) => {\n    return (\n        <ul className=\"list-group list-group-flush\">\n            { todos.map( (todo, i) => {\n                return <TodoListItem \n                            key={todo.id} \n                            todo={todo} \n                            index={i} \n                            handleDelete={handleDelete} \n                            handleToggle={handleToggle}\n                        />\n            })}\n        </ul>\n    )\n}\n","import React from 'react';\nimport { useForm } from '../hooks/useForm';\n\nexport const TodoAdd = ({ handleAddTodo }) => {\n\n    const [ { description } , handleInputChange, reset ] = useForm({\n        description: '',\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( description.trim().length <= 1 ) {\n            return;\n        }\n\n        // creamos un nuevo todo\n        const newTodo = {\n            id: new Date().getTime(),\n            desc: description,\n            done: false\n        }\n\n        handleAddTodo(newTodo);\n\n        // reseteamos el formulario\n        reset();\n    }\n\n\n    return (\n        <>\n            <h4>Agregar Todo</h4>\n            <hr />\n\n            <form onSubmit={ handleSubmit }>\n                <input \n                    type=\"text\" \n                    name=\"description\" \n                    placeholder=\"Aprender...\" \n                    autoComplete=\"off\" \n                    className=\"form-control\"\n                    value= { description }\n                    onChange={ handleInputChange }\n                />\n                <button \n                    className=\"btn btn-outline-primary mt-1\" \n                    type=\"submit\"\n                >\n                    Agregar\n                    \n                </button>\n            </form>\n        </>\n    )\n}\n","import { useState } from \"react\"\n\nexport const useForm = ( initialState = {} ) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ( {target} ) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [ values, handleInputChange, reset ]\n}","export const todoReducer = ( state = [], action ) => {\n \n    switch (action.type) {\n        case 'add':\n            return [...state, action.payload ];\n        \n        case 'delete':\n            return state.filter( todo => todo.id !== action.payload )\n\n        case 'toggle':\n            return state.map( todo => \n                (todo.id === action.payload)\n                ? { ...todo, done: !todo.done }\n                : todo\n            )\n        \n        case 'toggle-old':\n            return state.map( todo => {\n                if (todo.id === action.payload) {\n                    return {\n                        ...todo,\n                        done: !todo.done\n                    } \n                } else {\n                    return todo;\n                }\n            })\n    \n        default:\n            return state;\n    }\n}","import React, { useEffect, useReducer } from 'react';\n// import { todoReducer } from './todoReducer';\nimport './TodoApp.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoAdd } from './components/TodoAdd';\nimport { todoReducer } from './reducers/todoReducer';\n\n// la funcion init devuelve el initialState, que se inicializo como un array vacio\n\nconst init = () => {\n    // si existen todos tengo que regresar esos todos pero como arreglo, y si no existen tengo que regresar un arr vacio (inital state)\n    return JSON.parse(localStorage.getItem('todos')) || []; \n}\n\nexport const TodoApp = () => {\n\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\n\n    \n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos));\n    }, [todos])\n    \n    const handleDelete = ( todoId ) => {\n\n        const action = {\n            type: 'delete',\n            payload: todoId\n        }\n\n        dispatch(action);\n    }\n\n    const handleToggle = ( todoId ) => {\n        dispatch({\n            type: 'toggle',\n            payload: todoId\n        })\n    }\n\n    const handleAddTodo = ( newTodo ) => {\n        dispatch({\n            type: 'add',\n            payload: newTodo\n        })\n    }\n\n    return (\n        <div>\n            <h1>Todo App ({ todos.length }) </h1>\n            <hr/>\n            <div className=\"row\">\n\n                <div className=\"col-7\">\n\n                    <TodoList \n                        todos={todos} \n                        handleDelete={handleDelete} \n                        handleToggle={handleToggle}\n                    />\n\n                </div>\n\n                <div className=\"col-5\">\n\n                    <TodoAdd handleAddTodo={ handleAddTodo }/>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './TodoApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}